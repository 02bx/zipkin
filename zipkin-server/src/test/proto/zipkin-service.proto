// Copyright 2018 The OpenZipkin Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "zipkin.proto";

package zipkin.proto3;

// In Java, the closest model type to this proto is in the "zipkin2" package
option java_package = "zipkin2.proto3";
option java_multiple_files = true;

// TODO Once this API is finalized it should be moved to zipkin-api's zipkin.proto prior to
// this PR being merged into zipkin. We don't actually use the generated stubs anywhere in the main project -
// they are only being used for integration tests.

// Use this to report spans onto the gRPC transport. Implementations are asynchronous and may drop
// spans for reasons of sampling or storage availability. While this is primarily used to store
// spans, other operations may take place such as aggregation of service dependencies or data
// cleaning.
service SpanService {

  // Unary call analogous to the POST /api/v2/spans endpoint. Spans are not required to be complete
  // or belonging to the same trace.
  rpc Report(zipkin.proto3.ListOfSpans) returns (google.protobuf.Empty) {}
}
